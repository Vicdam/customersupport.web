name: Main

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scrybe_frontend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install

    - name: Run the tests
      run: npm ci
      
    - name: Build
      run: npm run build --if-present
      
    - name: test
      run: npm test
  

  build_and_push_to_registry:

    name: Build and push to Docker Hub

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scrybe_frontend

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}          
          password: ${{ secrets.DOCKERHUB_TOKEN }}
            
      - name: Get Current Date 
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"

      - name: Build, Tag and Push Frontend Image
        run: |
          docker build -t vicdam/scrybefrontend:latest .
          docker push vicdam/scrybefrontend:latest
        
      # - name: Build, Tag and Push Backend Image
      #   run: |
      #     cd ../backend/app
      #     docker build -t $DOCKERHUB_USERNAME/$REPOSITORY_NAME_BACKEND:${{ steps.date.outputs.date }} .
      #     docker push $DOCKERHUB_USERNAME/$REPOSITORY_NAME_BACKEND:${{ steps.date.outputs.date }}

  
  # Deploy:
  #   needs: [ build_and_push_to_registry ]
  #   runs-on: ubuntu-latest
  
  #   steps:
  #     - name: Checkout master
  #       uses: actions/checkout@master

  #     - name: Pull from GitHub
  #       uses: appleboy/ssh-action@master

  #       with:
  #         HOST: ${{ secrets.HOST }}
  #         USERNAME: ${{ secrets.USERNAME }}
  #         KEY: ${{ secrets.KEY }}
  #         script: |
  #           sudo docker-compose stop
  #           sudo docker-compose rm -f
  #           sudo docker-compose pull   
  #           sudo docker-compose up -d                              


        
